!function(){"use strict";var e=document.querySelector(".popup_edit-profile"),t=document.querySelector(".popup__form-input_type_name"),n=document.querySelector(".profile__value-type-name"),r=document.querySelector(".popup__form-input_type_profession"),o=document.querySelector(".profile__value-type-profession"),i=document.querySelector(".profile__edit-button"),a={inputSelector:".popup__form-input",submitButtonSelector:".popup__form-save-button",inactiveButtonClass:"popup__form-save-button_inactive",inputErrorClass:"popup__form-input_type_error",errorClass:"popup__form-input-error_active"},u=document.querySelector(".popup_add-card"),s=document.querySelector(".cards__list"),c=".card-template",l=u.querySelector(".popup__form-submit"),p=document.querySelector(".profile__add-button"),f=document.querySelector(".popup_card-image");function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add(this._inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._inactiveButtonClass),t.disabled=!1)}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState(e._inputList,e._buttonElement)}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"checkInitialFormValidity",value:function(){var e=this;this._inputList.forEach((function(t){e._hideError(t)})),this._toggleButtonState(this._inputList,this._buttonElement)}}])&&h(t.prototype,n),e}();function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&d(t.prototype,n),e}();function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var v=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._template=document.querySelector(n).content,this._handleCardClick=r,this._card=this._template.querySelector(".card").cloneNode(!0),this._deleteButton=this._card.querySelector(".card__delete"),this._cardPicture=this._card.querySelector(".card__picture"),this._cardName=this._card.querySelector(".card__name"),this._cardHeart=this._card.querySelector(".card__heart")}var t,n;return t=e,(n=[{key:"_addEventListeners",value:function(){var e=this;this._cardHeart.addEventListener("click",(function(e){e.target.classList.toggle("card__heart_active")})),this._deleteButton.addEventListener("click",(function(){e._card.remove(),e._card=null})),this._cardPicture.addEventListener("click",(function(){e._handleCardClick(e._link,e._name)}))}},{key:"render",value:function(){return this._cardName.textContent=this._name,this._cardPicture.src=this._link,this._cardPicture.alt="A picture of ".concat(this._name),this._addEventListeners(),this._card}}])&&m(t.prototype,n),e}();function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var E=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._handleEscClose=this._handleEscClose.bind(this),this.open=this.open.bind(this),this.close=this.close.bind(this)}var t,n;return t=e,(n=[{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup")||t.target.classList.contains("popup__close-icon"))&&e.close()}))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}}])&&b(t.prototype,n),e}();function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=w(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function w(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}function L(e,t){return L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},L(e,t)}function C(e,t){if(t&&("object"===g(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return O(e)}function O(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&L(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return C(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleFormSubmit=r,t.close=t.close.bind(O(t)),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._popup.querySelectorAll(".popup__form-input"),this._formValues={},this._inputList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup")||t.target.classList.contains("popup__close-icon"))&&e.close()})),this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){k(P(a.prototype),"close",this).call(this),this._popup.querySelector(".popup__form-submit").reset()}}])&&S(t.prototype,n),a}(E);function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var I=function(){function e(t){var n=t.profileName,r=t.profileProfession;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=n,this._profileProfession=r}var t,n;return t=e,n=[{key:"getUserInfo",value:function(){return this._userInfoValues={name:this._profileName.textContent,profession:this._profileProfession.textContent},this._userInfoValues}},{key:"setUserInfo",value:function(e){var t=e.popupInputName,n=e.popupInputProfession;this._profileName.textContent=t,this._profileProfession.textContent=n}}],n&&q(t.prototype,n),e}();function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=V(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},R.apply(this,arguments)}function V(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=D(e)););return e}function N(e,t){return N=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},N(e,t)}function T(e,t){if(t&&("object"===B(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return F(e)}function F(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function D(e){return D=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},D(e)}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&N(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=D(r);if(o){var n=D(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return T(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e)).open=t.open.bind(F(t)),t}return t=a,(n=[{key:"open",value:function(e,t){var n=this._popup.querySelector(".popup__image-photo");this._popup.querySelector(".popup__image-title").textContent=t,n.src=e,n.alt="A picture of ".concat(t),R(D(a.prototype),"open",this).call(this)}}])&&x(t.prototype,n),a}(E),U=new _(a,e.querySelector(".popup__form-submit"));U.enableValidation();var H=new I({profileName:n,profileProfession:o}),M=new j({popupSelector:e,handleFormSubmit:function(e){H.setUserInfo({popupInputName:e.fullName,popupInputProfession:e.profession}),M.close()}});M.setEventListeners(),i.addEventListener("click",(function(){var e=H.getUserInfo();t.value=e.name,r.value=e.profession,U.checkInitialFormValidity(),M.open()}));var Y=new A(f);Y.setEventListeners();var z=function(e){var t=e.render();G.addItem(t)},G=new y({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:function(e){var t=new v(e,c,Y.open);z(t)}},s);G.renderItems();var J=new _(a,l);J.enableValidation();var K=new j({popupSelector:u,handleFormSubmit:function(e){var t=new v(e,c,Y.open);z(t),K.close()}});K.setEventListeners(),p.addEventListener("click",(function(){J.checkInitialFormValidity(),K.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q2hFK0IsRUFBb0JDLEtBRXpCcEgsR0FFSHVILEVBQVlFLGNBUVosSUFBTUMsRUFBdUIsSUFBSXJILEVBQWNaLEVBQWdCUyxHQUMvRHdILEVBQXFCakIsbUJBRXJCLElBQU1rQixFQUFlLElBQUlsQyxFQUFjLENBQ25DVCxjQUFlakYsRUFDZjJGLGlCQUFrQixTQUFDcEMsR0FDZixJQUFNc0UsRUFBTyxJQUFJbkUsRUFBS0gsRUFBTXJELEVBQXNCaUgsRUFBVzlCLE1BQzdEK0IsRUFBb0JTLEdBQ3BCRCxFQUFhdEMsV0FJckJzQyxFQUFhYixvQkFFYjNHLEVBQVV1QyxpQkFBaUIsU0FBUyxXQUNoQ2dGLEVBQXFCVCwyQkFDckJVLEVBQWF2QyxVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBQb3B1cCBFZGl0IFByb2ZpbGUgQ29uc3RhbnRzXG5jb25zdCBwb3B1cEVkaXRQcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9lZGl0LXByb2ZpbGVcIik7XG5jb25zdCBwb3B1cElucHV0TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm0taW5wdXRfdHlwZV9uYW1lXCIpO1xuY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3ZhbHVlLXR5cGUtbmFtZVwiKTtcbmNvbnN0IHBvcHVwSW5wdXRQcm9mZXNzaW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybS1pbnB1dF90eXBlX3Byb2Zlc3Npb25cIik7XG5jb25zdCBwcm9maWxlUHJvZmVzc2lvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fdmFsdWUtdHlwZS1wcm9mZXNzaW9uXCIpO1xuY29uc3QgZWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1idXR0b25cIik7XG5cblxuY29uc3Qgc2V0dGluZ3NDb25maWcgPSB7XG4gICAgaW5wdXRTZWxlY3RvcjogXCIucG9wdXBfX2Zvcm0taW5wdXRcIixcbiAgICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIucG9wdXBfX2Zvcm0tc2F2ZS1idXR0b25cIixcbiAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcInBvcHVwX19mb3JtLXNhdmUtYnV0dG9uX2luYWN0aXZlXCIsXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19mb3JtLWlucHV0X3R5cGVfZXJyb3JcIixcbiAgICBlcnJvckNsYXNzOiBcInBvcHVwX19mb3JtLWlucHV0LWVycm9yX2FjdGl2ZVwiXG59O1xuXG4vLyBQb3B1cCBBZGQgQ2FyZCBDb25zdGFudHNcbmNvbnN0IHBvcHVwQWRkQ2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfYWRkLWNhcmRcIik7XG5jb25zdCBjYXJkc0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpO1xuY29uc3QgY2FyZFRlbXBsYXRlU2VsZWN0b3IgPSBcIi5jYXJkLXRlbXBsYXRlXCI7XG5jb25zdCBwb3B1cEFkZENhcmRQb3B1cEZvcm1TdWJtaXQgPSBwb3B1cEFkZENhcmQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybS1zdWJtaXRcIik7XG5jb25zdCBhZGRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idXR0b25cIik7XG5jb25zdCBwb3B1cENhcmRJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfY2FyZC1pbWFnZVwiKTtcblxuXG5jb25zdCBpbml0aWFsQ2FyZHMgPSBbe1xuICAgICAgICBuYW1lOiBcIllvc2VtaXRlIFZhbGxleVwiLFxuICAgICAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3lvc2VtaXRlLmpwZ1wiXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiTGFrZSBMb3Vpc2VcIixcbiAgICAgICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9sYWtlLWxvdWlzZS5qcGdcIlxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiBcIkJhbGQgTW91bnRhaW5zXCIsXG4gICAgICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvYmFsZC1tb3VudGFpbnMuanBnXCJcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJMYXRlbWFyXCIsXG4gICAgICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGF0ZW1hci5qcGdcIlxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiLFxuICAgICAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3Zhbm9pc2UuanBnXCJcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJMYWdvIGRpIEJyYWllc1wiLFxuICAgICAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xhZ28uanBnXCJcbiAgICB9XG5dO1xuXG5cblxuZXhwb3J0IHtcbiAgICAvLyBQb3B1cCBFZGl0IFByb2ZpbGUgQ29uc3RhbnRzXG4gICAgcG9wdXBFZGl0UHJvZmlsZSxcbiAgICBwb3B1cElucHV0TmFtZSxcbiAgICBwcm9maWxlTmFtZSxcbiAgICBwb3B1cElucHV0UHJvZmVzc2lvbixcbiAgICBwcm9maWxlUHJvZmVzc2lvbixcbiAgICBlZGl0QnV0dG9uLFxuICAgIHNldHRpbmdzQ29uZmlnLFxuXG4gICAgLy8gUG9wdXAgQWRkIENhcmQgQ29uc3RhbnRzXG4gICAgcG9wdXBBZGRDYXJkLFxuICAgIGNhcmRzTGlzdCxcbiAgICBjYXJkVGVtcGxhdGVTZWxlY3RvcixcbiAgICBwb3B1cEFkZENhcmRQb3B1cEZvcm1TdWJtaXQsXG4gICAgYWRkQnV0dG9uLFxuICAgIHBvcHVwQ2FyZEltYWdlLFxuXG4gICAgaW5pdGlhbENhcmRzXG59O1xuIiwiY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gICAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XG4gICAgICAgIHRoaXMuX2Zvcm1TZWxlY3RvciA9IHNldHRpbmdzLmZvcm1TZWxlY3RvcjtcbiAgICAgICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3I7XG4gICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XG4gICAgICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBzZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xuICAgICAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XG4gICAgICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBzZXR0aW5ncy5lcnJvckNsYXNzO1xuXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XG4gICAgICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20odGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKSk7XG4gICAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcbiAgICB9XG5cbiAgICBfc2hvd0Vycm9yKGlucHV0RWxlbWVudCwgZXJyb3JNZXNzYWdlKSB7XG4gICAgICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgICAgICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICAgICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xuICAgICAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcbiAgICB9XG5cbiAgICBfaGlkZUVycm9yKGlucHV0RWxlbWVudCkge1xuICAgICAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XG4gICAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICAgICAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgIH1cblxuICAgIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KSB7XG4gICAgICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICAgICAgICB0aGlzLl9zaG93RXJyb3IoaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5faGlkZUVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfaGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkge1xuICAgICAgICByZXR1cm4gaW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIF90b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQpIHtcbiAgICAgICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpKSB7XG4gICAgICAgICAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgICAgICAgICBidXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgICAgICAgIGJ1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUodGhpcy5faW5wdXRMaXN0LCB0aGlzLl9idXR0b25FbGVtZW50KTtcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUodGhpcy5faW5wdXRMaXN0LCB0aGlzLl9idXR0b25FbGVtZW50KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB9XG5cbiAgICBjaGVja0luaXRpYWxGb3JtVmFsaWRpdHkoKSB7XG4gICAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2hpZGVFcnJvcihpbnB1dEVsZW1lbnQpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUodGhpcy5faW5wdXRMaXN0LCB0aGlzLl9idXR0b25FbGVtZW50KTtcbiAgICB9XG59XG5cblxuZXhwb3J0IGRlZmF1bHQgRm9ybVZhbGlkYXRvcjtcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICAgIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XG4gICAgICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XG4gICAgICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgICAgIHRoaXMuX2NvbnRhaW5lciA9IGNvbnRhaW5lclNlbGVjdG9yO1xuICAgIH1cblxuICAgIHJlbmRlckl0ZW1zKCkge1xuICAgICAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKGl0ZW0gPT5cbiAgICAgICAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgYWRkSXRlbShlbGVtZW50KSB7XG4gICAgICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xuICAgIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICAgIGNvbnN0cnVjdG9yKGNhcmREYXRhLCBjYXJkVGVtcGxhdGVTZWxlY3RvciwgaGFuZGxlQ2FyZENsaWNrKSB7XG4gICAgICAgIHRoaXMuX25hbWUgPSBjYXJkRGF0YS5uYW1lO1xuICAgICAgICB0aGlzLl9saW5rID0gY2FyZERhdGEubGluaztcbiAgICAgICAgdGhpcy5fdGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNhcmRUZW1wbGF0ZVNlbGVjdG9yKS5jb250ZW50O1xuICAgICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XG5cbiAgICAgICAgdGhpcy5fY2FyZCA9IHRoaXMuX3RlbXBsYXRlLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbiA9IHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGVcIik7XG4gICAgICAgIHRoaXMuX2NhcmRQaWN0dXJlID0gdGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3BpY3R1cmVcIik7XG4gICAgICAgIHRoaXMuX2NhcmROYW1lID0gdGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX25hbWVcIik7XG4gICAgICAgIHRoaXMuX2NhcmRIZWFydCA9IHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19oZWFydFwiKTtcbiAgICB9XG5cbiAgICBfYWRkRXZlbnRMaXN0ZW5lcnMoKSB7XG5cbiAgICAgICAgLy8gTGlrZSBVbmxpa2VcbiAgICAgICAgdGhpcy5fY2FyZEhlYXJ0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGV2ZW50LnRhcmdldC5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9faGVhcnRfYWN0aXZlXCIpO1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyBEZWxldGUgQ2FyZFxuICAgICAgICB0aGlzLl9kZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2NhcmQucmVtb3ZlKCk7XG4gICAgICAgICAgICB0aGlzLl9jYXJkID0gbnVsbDtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gSW1hZ2UgUG9wdXBcbiAgICAgICAgdGhpcy5fY2FyZFBpY3R1cmUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayh0aGlzLl9saW5rLCB0aGlzLl9uYW1lKTtcbiAgICAgICAgfSk7XG5cbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHRoaXMuX2NhcmROYW1lLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcbiAgICAgICAgdGhpcy5fY2FyZFBpY3R1cmUuc3JjID0gdGhpcy5fbGluaztcbiAgICAgICAgdGhpcy5fY2FyZFBpY3R1cmUuYWx0ID0gYEEgcGljdHVyZSBvZiAke3RoaXMuX25hbWV9YDtcbiAgICAgICAgdGhpcy5fYWRkRXZlbnRMaXN0ZW5lcnMoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NhcmQ7XG4gICAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICAgICAgdGhpcy5fcG9wdXAgPSBwb3B1cFNlbGVjdG9yO1xuICAgICAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMub3BlbiA9IHRoaXMub3Blbi5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLmNsb3NlID0gdGhpcy5jbG9zZS5iaW5kKHRoaXMpO1xuXG4gICAgfVxuXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgICAgICAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwb3B1cFwiKSB8fCBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwX19jbG9zZS1pY29uXCIpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XG4gICAgICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvcGVuKCkge1xuICAgICAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKFwicG9wdXBfb3BlbmVkXCIpO1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gICAgfVxuXG4gICAgY2xvc2UoKSB7XG4gICAgICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcGVuZWRcIik7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQgfSkge1xuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gICAgICAgIHRoaXMuY2xvc2UgPSB0aGlzLmNsb3NlLmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgX2dldElucHV0VmFsdWVzKCkge1xuXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdCA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBfX2Zvcm0taW5wdXRcIik7XG4gICAgICAgIHRoaXMuX2Zvcm1WYWx1ZXMgPSB7fTtcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goaW5wdXQgPT4gdGhpcy5fZm9ybVZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Zvcm1WYWx1ZXM7XG4gICAgfVxuXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgICAgICAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwb3B1cFwiKSB8fCBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwX19jbG9zZS1pY29uXCIpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgY2xvc2UoKSB7XG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XG4gICAgICAgIHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm0tc3VibWl0XCIpLnJlc2V0KCk7XG4gICAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcbiAgICBjb25zdHJ1Y3Rvcih7IHByb2ZpbGVOYW1lLCBwcm9maWxlUHJvZmVzc2lvbiB9KSB7XG4gICAgICAgIHRoaXMuX3Byb2ZpbGVOYW1lID0gcHJvZmlsZU5hbWU7XG4gICAgICAgIHRoaXMuX3Byb2ZpbGVQcm9mZXNzaW9uID0gcHJvZmlsZVByb2Zlc3Npb247XG4gICAgfVxuXG4gICAgZ2V0VXNlckluZm8oKSB7XG4gICAgICAgIHRoaXMuX3VzZXJJbmZvVmFsdWVzID0ge1xuICAgICAgICAgICAgbmFtZTogdGhpcy5fcHJvZmlsZU5hbWUudGV4dENvbnRlbnQsXG4gICAgICAgICAgICBwcm9mZXNzaW9uOiB0aGlzLl9wcm9maWxlUHJvZmVzc2lvbi50ZXh0Q29udGVudFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gdGhpcy5fdXNlckluZm9WYWx1ZXM7XG4gICAgfVxuXG4gICAgc2V0VXNlckluZm8oeyBwb3B1cElucHV0TmFtZSwgcG9wdXBJbnB1dFByb2Zlc3Npb24gfSkge1xuICAgICAgICB0aGlzLl9wcm9maWxlTmFtZS50ZXh0Q29udGVudCA9IHBvcHVwSW5wdXROYW1lO1xuICAgICAgICB0aGlzLl9wcm9maWxlUHJvZmVzc2lvbi50ZXh0Q29udGVudCA9IHBvcHVwSW5wdXRQcm9mZXNzaW9uO1xuICAgIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgICAgICB0aGlzLm9wZW4gPSB0aGlzLm9wZW4uYmluZCh0aGlzKTtcbiAgICB9XG5cbiAgICBvcGVuKGxpbmssIG5hbWUpIHtcbiAgICAgICAgY29uc3QgcG9wdXBJbWFnZVBob3RvID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1hZ2UtcGhvdG9cIik7XG4gICAgICAgIHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlLXRpdGxlXCIpLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICAgICAgcG9wdXBJbWFnZVBob3RvLnNyYyA9IGxpbms7XG4gICAgICAgIHBvcHVwSW1hZ2VQaG90by5hbHQgPSBgQSBwaWN0dXJlIG9mICR7bmFtZX1gO1xuICAgICAgICBzdXBlci5vcGVuKCk7XG4gICAgfVxufVxuIiwiaW1wb3J0IFwiLi4vcGFnZXMvaW5kZXguY3NzXCI7XG5cbmltcG9ydCB7XG4gICAgLy8gUG9wdXAgRWRpdCBQcm9maWxlIENvbnN0YW50c1xuICAgIHBvcHVwRWRpdFByb2ZpbGUsXG4gICAgcG9wdXBJbnB1dE5hbWUsXG4gICAgcHJvZmlsZU5hbWUsXG4gICAgcG9wdXBJbnB1dFByb2Zlc3Npb24sXG4gICAgcHJvZmlsZVByb2Zlc3Npb24sXG4gICAgZWRpdEJ1dHRvbixcbiAgICBzZXR0aW5nc0NvbmZpZyxcblxuICAgIC8vIFBvcHVwIEFkZCBDYXJkIENvbnN0YW50c1xuICAgIHBvcHVwQWRkQ2FyZCxcbiAgICBjYXJkc0xpc3QsXG4gICAgY2FyZFRlbXBsYXRlU2VsZWN0b3IsXG4gICAgcG9wdXBBZGRDYXJkUG9wdXBGb3JtU3VibWl0LFxuICAgIGFkZEJ1dHRvbixcbiAgICBwb3B1cENhcmRJbWFnZSxcblxuICAgIGluaXRpYWxDYXJkc1xufSBmcm9tIFwiLi91dGlscy9jb25zdGFudHMuanNcIjtcblxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcbmltcG9ydCBDYXJkIGZyb20gXCIuL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLy8vLy8vLy8vLy8gRWRpdCBQcm9maWxlIFBvcHVwIC8vLy8vL1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5cbmNvbnN0IGVkaXRQcm9maWxlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHNldHRpbmdzQ29uZmlnLCBwb3B1cEVkaXRQcm9maWxlLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm0tc3VibWl0XCIpKTtcbmVkaXRQcm9maWxlRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbmNvbnN0IHByb2ZpbGVJbmZvID0gbmV3IFVzZXJJbmZvKHsgcHJvZmlsZU5hbWUsIHByb2ZpbGVQcm9mZXNzaW9uIH0pO1xuXG5jb25zdCBlZGl0UHJvZmlsZVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICAgIHBvcHVwU2VsZWN0b3I6IHBvcHVwRWRpdFByb2ZpbGUsXG4gICAgaGFuZGxlRm9ybVN1Ym1pdDogKGl0ZW0pID0+IHtcbiAgICAgICAgcHJvZmlsZUluZm8uc2V0VXNlckluZm8oeyBwb3B1cElucHV0TmFtZTogaXRlbS5mdWxsTmFtZSwgcG9wdXBJbnB1dFByb2Zlc3Npb246IGl0ZW0ucHJvZmVzc2lvbiB9KTtcbiAgICAgICAgZWRpdFByb2ZpbGVQb3B1cC5jbG9zZSgpO1xuICAgIH1cbn0pO1xuXG5lZGl0UHJvZmlsZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cblxuZWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGNvbnN0IHVzZXJJbmZvVG9EaXNwbGF5SW5Gb3JtID0gcHJvZmlsZUluZm8uZ2V0VXNlckluZm8oKTtcbiAgICBwb3B1cElucHV0TmFtZS52YWx1ZSA9IHVzZXJJbmZvVG9EaXNwbGF5SW5Gb3JtLm5hbWU7XG4gICAgcG9wdXBJbnB1dFByb2Zlc3Npb24udmFsdWUgPSB1c2VySW5mb1RvRGlzcGxheUluRm9ybS5wcm9mZXNzaW9uO1xuICAgIGVkaXRQcm9maWxlRm9ybVZhbGlkYXRvci5jaGVja0luaXRpYWxGb3JtVmFsaWRpdHkoKTtcbiAgICBlZGl0UHJvZmlsZVBvcHVwLm9wZW4oKTtcblxufSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLy8vLy8vLy8vLy8gc2l4IGluaXRpYWwgY2FyZHMgLy8vLy8vLy8vLy9cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5jb25zdCBpbWFnZVBvcHVwID0gbmV3IFBvcHVwV2l0aEltYWdlKHBvcHVwQ2FyZEltYWdlKTtcbmltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuY29uc3QgcmVuZGVyQW5kQWRkTmV3Q2FyZCA9IChuZXdDYXJkKSA9PiB7XG4gICAgY29uc3QgbmV3Q2FyZEVsZW1lbnQgPSBuZXdDYXJkLnJlbmRlcigpO1xuICAgIGxpc3RPZkNhcmRzLmFkZEl0ZW0obmV3Q2FyZEVsZW1lbnQpO1xufTtcblxuY29uc3QgbGlzdE9mQ2FyZHMgPSBuZXcgU2VjdGlvbih7XG4gICAgaXRlbXM6IGluaXRpYWxDYXJkcyxcbiAgICByZW5kZXJlcjogKGl0ZW0pID0+IHtcbiAgICAgICAgY29uc3QgbmV3Q2FyZCA9IG5ldyBDYXJkKGl0ZW0sIGNhcmRUZW1wbGF0ZVNlbGVjdG9yLCBpbWFnZVBvcHVwLm9wZW4pO1xuICAgICAgICByZW5kZXJBbmRBZGROZXdDYXJkKG5ld0NhcmQpO1xuICAgIH1cbn0sIGNhcmRzTGlzdCk7XG5cbmxpc3RPZkNhcmRzLnJlbmRlckl0ZW1zKCk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLy8vLy8vLy8vLy8gQWRkIENhcmQgUG9wdXAgLy8vLy8vLy8vLy8vL1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5cbmNvbnN0IGFkZENhcmRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3Ioc2V0dGluZ3NDb25maWcsIHBvcHVwQWRkQ2FyZFBvcHVwRm9ybVN1Ym1pdCk7XG5hZGRDYXJkRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbmNvbnN0IGFkZENhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcbiAgICBwb3B1cFNlbGVjdG9yOiBwb3B1cEFkZENhcmQsXG4gICAgaGFuZGxlRm9ybVN1Ym1pdDogKGl0ZW0pID0+IHtcbiAgICAgICAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGl0ZW0sIGNhcmRUZW1wbGF0ZVNlbGVjdG9yLCBpbWFnZVBvcHVwLm9wZW4pO1xuICAgICAgICByZW5kZXJBbmRBZGROZXdDYXJkKGNhcmQpO1xuICAgICAgICBhZGRDYXJkUG9wdXAuY2xvc2UoKTtcbiAgICB9XG59KTtcblxuYWRkQ2FyZFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGFkZENhcmRGb3JtVmFsaWRhdG9yLmNoZWNrSW5pdGlhbEZvcm1WYWxpZGl0eSgpO1xuICAgIGFkZENhcmRQb3B1cC5vcGVuKCk7XG59KTtcbiJdLCJuYW1lcyI6WyJwb3B1cEVkaXRQcm9maWxlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicG9wdXBJbnB1dE5hbWUiLCJwcm9maWxlTmFtZSIsInBvcHVwSW5wdXRQcm9mZXNzaW9uIiwicHJvZmlsZVByb2Zlc3Npb24iLCJlZGl0QnV0dG9uIiwic2V0dGluZ3NDb25maWciLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsInBvcHVwQWRkQ2FyZCIsImNhcmRzTGlzdCIsImNhcmRUZW1wbGF0ZVNlbGVjdG9yIiwicG9wdXBBZGRDYXJkUG9wdXBGb3JtU3VibWl0IiwiYWRkQnV0dG9uIiwicG9wdXBDYXJkSW1hZ2UiLCJGb3JtVmFsaWRhdG9yIiwic2V0dGluZ3MiLCJmb3JtRWxlbWVudCIsInRoaXMiLCJfZm9ybVNlbGVjdG9yIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsIl9mb3JtRWxlbWVudCIsIl9pbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiX2J1dHRvbkVsZW1lbnQiLCJpbnB1dEVsZW1lbnQiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJpZCIsImNsYXNzTGlzdCIsImFkZCIsInRleHRDb250ZW50IiwicmVtb3ZlIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlRXJyb3IiLCJfc2hvd0Vycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJpbnB1dExpc3QiLCJzb21lIiwiYnV0dG9uRWxlbWVudCIsIl9oYXNJbnZhbGlkSW5wdXQiLCJkaXNhYmxlZCIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImZvckVhY2giLCJhZGRFdmVudExpc3RlbmVyIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJpdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJDYXJkIiwiY2FyZERhdGEiLCJoYW5kbGVDYXJkQ2xpY2siLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfdGVtcGxhdGUiLCJjb250ZW50IiwiX2hhbmRsZUNhcmRDbGljayIsIl9jYXJkIiwiY2xvbmVOb2RlIiwiX2RlbGV0ZUJ1dHRvbiIsIl9jYXJkUGljdHVyZSIsIl9jYXJkTmFtZSIsIl9jYXJkSGVhcnQiLCJldmVudCIsInRhcmdldCIsInRvZ2dsZSIsInNyYyIsImFsdCIsIl9hZGRFdmVudExpc3RlbmVycyIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cCIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJvcGVuIiwiY2xvc2UiLCJjb250YWlucyIsImtleSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX2Zvcm1WYWx1ZXMiLCJpbnB1dCIsInZhbHVlIiwiX2dldElucHV0VmFsdWVzIiwicmVzZXQiLCJVc2VySW5mbyIsIl9wcm9maWxlTmFtZSIsIl9wcm9maWxlUHJvZmVzc2lvbiIsIl91c2VySW5mb1ZhbHVlcyIsInByb2Zlc3Npb24iLCJQb3B1cFdpdGhJbWFnZSIsInBvcHVwSW1hZ2VQaG90byIsImVkaXRQcm9maWxlRm9ybVZhbGlkYXRvciIsImVuYWJsZVZhbGlkYXRpb24iLCJwcm9maWxlSW5mbyIsImVkaXRQcm9maWxlUG9wdXAiLCJzZXRVc2VySW5mbyIsImZ1bGxOYW1lIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJ1c2VySW5mb1RvRGlzcGxheUluRm9ybSIsImdldFVzZXJJbmZvIiwiY2hlY2tJbml0aWFsRm9ybVZhbGlkaXR5IiwiaW1hZ2VQb3B1cCIsInJlbmRlckFuZEFkZE5ld0NhcmQiLCJuZXdDYXJkIiwibmV3Q2FyZEVsZW1lbnQiLCJyZW5kZXIiLCJsaXN0T2ZDYXJkcyIsImFkZEl0ZW0iLCJyZW5kZXJJdGVtcyIsImFkZENhcmRGb3JtVmFsaWRhdG9yIiwiYWRkQ2FyZFBvcHVwIiwiY2FyZCJdLCJzb3VyY2VSb290IjoiIn0=